<div class="comment">
  <p><%= comment.text %></p>
  <p><%= link_to comment.get_commenter_name, member_path(comment.member_id)%>
  <p><%= time_ago_in_words(comment.created_at) %> </p>
  <p class="comment-upvote-count"><%= comment.get_upvotes.size %></p>

  <% if member_signed_in? %>
    <%= link_to (current_member.voted_for?(comment) ? "Unvote" : "Upvote"), vote_comment_path(comment), :class => "comment-upvote", :method => "put", :remote => true %>
  <% end %>
  <!--
  Comment should have a link to reply.
  Clicking the link should make a get request to the (WHICH) controller for a new reply?
  ... Is a new reply necessary? form_for...
  A box should appear for you to type in (**?!?!**)
  When you submit the form, it should post to... comment.create?
  But it should know to populate the parent_comment_id (hidden form tag?)
  -->
  <button class="reply-button"> Reply </button>


  <%= form_tag( {controller: "comments", action: "create"}, method: "post", class: "reply-form") do %>
    <%= hidden_field_tag(:post_id, comment.post_id) %>
    <%= hidden_field_tag(:parent_id, comment.id) %>
    <%= text_area_tag :text %>
    <%= submit_tag "Go ahead. Reply. I dare you." %>
  <% end %>

  <%= render partial: "comment", collection: comment.replies %>
</div>

<script>
  $('.reply-button').on('click', function(){
    $(this).closest('.comment').find('.reply-form:first').show()
  })

  $('.comment-upvote')
   .on('ajax:error', function () {
     $(this).after('<div>There was an upvote issue.</div>');
   }).on('ajax:success', function (res, data) {
     var $this = $(this)
     $this.closest('.comment').find('.comment-upvote-count:first').text(data.vote_count)
     var current_text = $this.text()
     $this.text(data.voted_for ? "Unvote" : "Upvote")
   });
</script>
